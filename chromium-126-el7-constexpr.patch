diff -up chromium-126.0.6478.26/chrome/browser/ui/lens/lens_untrusted_ui.h.constexpr chromium-126.0.6478.26/chrome/browser/ui/lens/lens_untrusted_ui.h
--- chromium-126.0.6478.26/chrome/browser/ui/lens/lens_untrusted_ui.h.constexpr	2024-05-29 18:00:58.000000000 +0200
+++ chromium-126.0.6478.26/chrome/browser/ui/lens/lens_untrusted_ui.h	2024-06-02 23:51:25.539916606 +0200
@@ -47,7 +47,7 @@ class LensUntrustedUI : public Untrusted
       mojo::PendingReceiver<color_change_listener::mojom::PageHandler>
           receiver);
 
-  static constexpr std::string GetWebUIName() { return "LensUntrusted"; }
+  static const std::string GetWebUIName() { return "LensUntrusted"; }
 
  private:
   // lens::mojom::LensPageHandlerFactory:
diff -up chromium-126.0.6478.26/chrome/browser/ui/lens/search_bubble_ui.h.constexpr chromium-126.0.6478.26/chrome/browser/ui/lens/search_bubble_ui.h
--- chromium-126.0.6478.26/chrome/browser/ui/lens/search_bubble_ui.h.constexpr	2024-05-29 18:00:58.000000000 +0200
+++ chromium-126.0.6478.26/chrome/browser/ui/lens/search_bubble_ui.h	2024-06-02 23:51:25.539916606 +0200
@@ -25,7 +25,7 @@ class SearchBubbleUI : public TopChromeW
       mojo::PendingReceiver<lens::mojom::SearchBubblePageHandlerFactory>
           receiver);
 
-  static constexpr std::string GetWebUIName() { return "LensSearchBubble"; }
+  static const std::string GetWebUIName() { return "LensSearchBubble"; }
 
  private:
   // lens::mojom::SearchBubblePageHandlerFactory
diff -up chromium-126.0.6478.26/chrome/browser/ui/webui/commerce/shopping_insights_side_panel_ui.h.constexpr chromium-126.0.6478.26/chrome/browser/ui/webui/commerce/shopping_insights_side_panel_ui.h
--- chromium-126.0.6478.26/chrome/browser/ui/webui/commerce/shopping_insights_side_panel_ui.h.constexpr	2024-05-29 18:00:59.000000000 +0200
+++ chromium-126.0.6478.26/chrome/browser/ui/webui/commerce/shopping_insights_side_panel_ui.h	2024-06-02 23:51:25.539916606 +0200
@@ -55,7 +55,7 @@ class ShoppingInsightsSidePanelUI
       mojo::PendingReceiver<
           shopping_service::mojom::ShoppingServiceHandlerFactory> receiver);
 
-  static constexpr std::string GetWebUIName() {
+  static const std::string GetWebUIName() {
     return "ShoppingInsightsSidePanel";
   }
 
diff -up chromium-126.0.6478.26/chrome/browser/ui/webui/compose/compose_untrusted_ui.h.constexpr chromium-126.0.6478.26/chrome/browser/ui/webui/compose/compose_untrusted_ui.h
--- chromium-126.0.6478.26/chrome/browser/ui/webui/compose/compose_untrusted_ui.h.constexpr	2024-05-29 18:00:59.000000000 +0200
+++ chromium-126.0.6478.26/chrome/browser/ui/webui/compose/compose_untrusted_ui.h	2024-06-02 23:51:25.540916630 +0200
@@ -58,7 +58,7 @@ class ComposeUntrustedUI
     triggering_web_contents_ = web_contents->GetWeakPtr();
   }
 
-  static constexpr std::string GetWebUIName() { return "Compose"; }
+  static const std::string GetWebUIName() { return "Compose"; }
 
  private:
   void CreateComposeSessionUntrustedPageHandler(
diff -up chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/bookmarks/bookmarks_side_panel_ui.h.constexpr chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/bookmarks/bookmarks_side_panel_ui.h
--- chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/bookmarks/bookmarks_side_panel_ui.h.constexpr	2024-05-29 18:00:59.000000000 +0200
+++ chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/bookmarks/bookmarks_side_panel_ui.h	2024-06-02 23:51:25.540916630 +0200
@@ -75,7 +75,7 @@ class BookmarksSidePanelUI
   commerce::ShoppingListContextMenuController*
   GetShoppingListContextMenuController();
 
-  static constexpr std::string GetWebUIName() { return "BookmarksSidePanel"; }
+  static const std::string GetWebUIName() { return "BookmarksSidePanel"; }
 
  private:
   // side_panel::mojom::BookmarksPageHandlerFactory:
diff -up chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/companion/companion_side_panel_untrusted_ui.h.constexpr chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/companion/companion_side_panel_untrusted_ui.h
--- chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/companion/companion_side_panel_untrusted_ui.h.constexpr	2024-06-03 18:20:28.504604071 +0200
+++ chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/companion/companion_side_panel_untrusted_ui.h	2024-06-03 18:20:44.559016497 +0200
@@ -34,7 +34,7 @@ class CompanionSidePanelUntrustedUI
   // Gets a weak pointer to this object.
   base::WeakPtr<CompanionSidePanelUntrustedUI> GetWeakPtr();
 
-  static constexpr std::string GetWebUIName() {
+  static const std::string GetWebUIName() {
     return "CompanionSidePanelUntrusted";
   }
 
diff -up chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/customize_chrome/customize_chrome_ui.h.constexpr chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/customize_chrome/customize_chrome_ui.h
--- chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/customize_chrome/customize_chrome_ui.h.constexpr	2024-06-03 18:13:52.741282949 +0200
+++ chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/customize_chrome/customize_chrome_ui.h	2024-06-03 18:14:34.718442888 +0200
@@ -111,7 +111,7 @@ class CustomizeChromeUI
           side_panel::customize_chrome::mojom::CustomizeToolbarHandlerFactory>
           receiver);
 
-  static constexpr std::string GetWebUIName() { return "CustomizeChrome"; }
+  static const std::string GetWebUIName() { return "CustomizeChrome"; }
 
  private:
   // side_panel::mojom::CustomizeChromePageHandlerFactory
diff -up chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/history_clusters/history_clusters_side_panel_ui.h.constexpr chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/history_clusters/history_clusters_side_panel_ui.h
--- chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/history_clusters/history_clusters_side_panel_ui.h.constexpr	2024-05-29 18:00:59.000000000 +0200
+++ chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/history_clusters/history_clusters_side_panel_ui.h	2024-06-02 23:51:25.540916630 +0200
@@ -70,7 +70,7 @@ class HistoryClustersSidePanelUI : publi
   void DidFinishNavigation(
       content::NavigationHandle* navigation_handle) override;
 
-  static constexpr std::string GetWebUIName() {
+  static const std::string GetWebUIName() {
     return "HistoryClustersSidePanel";
   }
 
diff -up chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/performance_controls/performance_side_panel_ui.h.constexpr chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/performance_controls/performance_side_panel_ui.h
--- chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/performance_controls/performance_side_panel_ui.h.constexpr	2024-05-29 18:00:59.000000000 +0200
+++ chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/performance_controls/performance_side_panel_ui.h	2024-06-02 23:51:25.540916630 +0200
@@ -41,7 +41,7 @@ class PerformanceSidePanelUI
       mojo::PendingReceiver<color_change_listener::mojom::PageHandler>
           pending_receiver);
 
-  static constexpr std::string GetWebUIName() { return "PerformanceSidePanel"; }
+  static const std::string GetWebUIName() { return "PerformanceSidePanel"; }
 
  private:
   // side_panel::mojom::PerformancePageHandlerFactory:
diff -up chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/read_anything/read_anything_untrusted_ui.h.constexpr chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/read_anything/read_anything_untrusted_ui.h
--- chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/read_anything/read_anything_untrusted_ui.h.constexpr	2024-05-29 18:01:00.000000000 +0200
+++ chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/read_anything/read_anything_untrusted_ui.h	2024-06-02 23:51:25.541916654 +0200
@@ -55,7 +55,7 @@ class ReadAnythingUntrustedUI
       mojo::PendingReceiver<read_anything::mojom::UntrustedPageHandlerFactory>
           receiver);
 
-  static constexpr std::string GetWebUIName() {
+  static const std::string GetWebUIName() {
     return "ReadAnythingUntrusted";
   }
 
diff -up chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/reading_list/reading_list_ui.h.constexpr chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/reading_list/reading_list_ui.h
--- chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/reading_list/reading_list_ui.h.constexpr	2024-05-29 18:01:00.000000000 +0200
+++ chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/reading_list/reading_list_ui.h	2024-06-02 23:51:25.541916654 +0200
@@ -58,7 +58,7 @@ class ReadingListUI : public TopChromeWe
 
   void SetActiveTabURL(const GURL& url);
 
-  static constexpr std::string GetWebUIName() { return "ReadingList"; }
+  static const std::string GetWebUIName() { return "ReadingList"; }
 
  private:
   // reading_list::mojom::PageHandlerFactory:
diff -up chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/user_notes/user_notes_side_panel_ui.h.constexpr chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/user_notes/user_notes_side_panel_ui.h
--- chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/user_notes/user_notes_side_panel_ui.h.constexpr	2024-05-29 18:01:00.000000000 +0200
+++ chromium-126.0.6478.26/chrome/browser/ui/webui/side_panel/user_notes/user_notes_side_panel_ui.h	2024-06-02 23:51:25.541916654 +0200
@@ -35,7 +35,7 @@ class UserNotesSidePanelUI
 
   void set_browser(Browser* browser) { browser_ = browser; }
 
-  static constexpr std::string GetWebUIName() { return "UserNotesSidePanel"; }
+  static const std::string GetWebUIName() { return "UserNotesSidePanel"; }
 
  private:
   // user_notes::mojom::UserNotesPageHandlerFactory
diff -up chromium-126.0.6478.26/chrome/browser/ui/webui/tab_search/tab_search_ui.h.constexpr chromium-126.0.6478.26/chrome/browser/ui/webui/tab_search/tab_search_ui.h
--- chromium-126.0.6478.26/chrome/browser/ui/webui/tab_search/tab_search_ui.h.constexpr	2024-05-29 18:01:00.000000000 +0200
+++ chromium-126.0.6478.26/chrome/browser/ui/webui/tab_search/tab_search_ui.h	2024-06-02 23:51:25.542916677 +0200
@@ -58,7 +58,7 @@ class TabSearchUI : public TopChromeWebU
     return page_handler_.get();
   }
 
-  static constexpr std::string GetWebUIName() { return "TabSearch"; }
+  static const std::string GetWebUIName() { return "TabSearch"; }
 
  private:
   // tab_search::mojom::PageHandlerFactory
diff -up chromium-126.0.6478.26/components/autofill/core/browser/data_model/autofill_i18n_api.h.constexpr chromium-126.0.6478.26/components/autofill/core/browser/data_model/autofill_i18n_api.h
--- chromium-126.0.6478.26/components/autofill/core/browser/data_model/autofill_i18n_api.h.constexpr	2024-05-29 18:01:05.000000000 +0200
+++ chromium-126.0.6478.26/components/autofill/core/browser/data_model/autofill_i18n_api.h	2024-06-02 23:51:25.542916677 +0200
@@ -16,8 +16,8 @@ namespace autofill::i18n_model_definitio
 // Country code that represents autofill's legacy address hierarchy model as
 // stored `kAutofillModelRules`. As a workaround for GCC we declare the
 // std::string constexpr first.
-constexpr inline std::string kLegacyHierarchyCountryCodeString{"XX"};
-constexpr AddressCountryCode kLegacyHierarchyCountryCode =
+const inline std::string kLegacyHierarchyCountryCodeString{"XX"};
+const AddressCountryCode kLegacyHierarchyCountryCode =
     AddressCountryCode(kLegacyHierarchyCountryCodeString);
 
 // Creates an instance of the address hierarchy model corresponding to the
diff -up chromium-126.0.6478.26/components/autofill/core/browser/form_parsing/transpile_regex_patterns.py.constexpr chromium-126.0.6478.26/components/autofill/core/browser/form_parsing/transpile_regex_patterns.py
--- chromium-126.0.6478.26/components/autofill/core/browser/form_parsing/transpile_regex_patterns.py.constexpr	2024-05-29 18:01:05.000000000 +0200
+++ chromium-126.0.6478.26/components/autofill/core/browser/form_parsing/transpile_regex_patterns.py	2024-06-02 23:51:36.322172739 +0200
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/opt/rh/rh-python38/root/usr/bin/python
 
 # Copyright 2020 The Chromium Authors
 # Use of this source code is governed by a BSD-style license that can be
@@ -54,7 +54,7 @@ def generate_matching_pattern_equals(nam
   yield '// Checks if all the matching patterns for the given PatternSources'
   yield '// and language are the same - meaning that computing predictions for'
   yield '// both is unnecessary, since it will yield the same result.'
-  yield 'constexpr bool AreMatchingPatternsEqualImpl(PatternSource a,'
+  yield 'const bool AreMatchingPatternsEqualImpl(PatternSource a,'
   yield '                                            PatternSource b,'
   yield '                                            LanguageCode lang_code) {'
   yield '  if (a == b) {'
diff -up chromium-126.0.6478.26/components/autofill/core/browser/metrics/log_event.h.constexpr chromium-126.0.6478.26/components/autofill/core/browser/metrics/log_event.h
--- chromium-126.0.6478.26/components/autofill/core/browser/metrics/log_event.h.constexpr	2024-05-29 18:01:05.000000000 +0200
+++ chromium-126.0.6478.26/components/autofill/core/browser/metrics/log_event.h	2024-06-02 23:51:25.542916677 +0200
@@ -57,7 +57,7 @@ struct IsRequired {
   // This function is not defined and consteval. Therefore, any evaluation will
   // fail and fail at compile time.
   template <typename T>
-  consteval operator T();  // NOLINT
+  operator T();  // NOLINT
 };
 
 }  // namespace internal
diff -up chromium-126.0.6478.26/components/history/core/browser/history_types.h.constexpr chromium-126.0.6478.26/components/history/core/browser/history_types.h
--- chromium-126.0.6478.26/components/history/core/browser/history_types.h.constexpr	2024-05-29 18:01:06.000000000 +0200
+++ chromium-126.0.6478.26/components/history/core/browser/history_types.h	2024-06-02 23:51:25.542916677 +0200
@@ -70,7 +70,7 @@ constexpr VisitedLinkID kInvalidVisitedL
 typedef std::map<VisitID, VisitSource> VisitSourceMap;
 
 // Constant used to represent that no app_id is used for matching.
-inline constexpr std::optional<std::string> kNoAppIdFilter = std::nullopt;
+inline const std::optional<std::string> kNoAppIdFilter = std::nullopt;
 
 // VisitRow -------------------------------------------------------------------
 
diff -up chromium-126.0.6478.26/components/omnibox/browser/on_device_tail_model_service.cc.constexpr chromium-126.0.6478.26/components/omnibox/browser/on_device_tail_model_service.cc
--- chromium-126.0.6478.26/components/omnibox/browser/on_device_tail_model_service.cc.constexpr	2024-05-29 18:01:07.000000000 +0200
+++ chromium-126.0.6478.26/components/omnibox/browser/on_device_tail_model_service.cc	2024-06-02 23:51:25.543916702 +0200
@@ -30,7 +30,7 @@ namespace {
 // The maximum idle time before the model executor is unloaded from memory.
 constexpr base::TimeDelta kMaxExecutorIdleSeconds = base::Seconds(60);
 // Constants for TFlite model validation.
-constexpr std::string kTestPrefix = "face";
+const std::string kTestPrefix = "face";
 constexpr std::string_view kModelValidationSwitchName =
     "omnibox-on-device-tail-model-validation";
 
diff -up chromium-126.0.6478.26/services/network/shared_dictionary/simple_url_pattern_matcher.cc.constexpr chromium-126.0.6478.26/services/network/shared_dictionary/simple_url_pattern_matcher.cc
--- chromium-126.0.6478.26/services/network/shared_dictionary/simple_url_pattern_matcher.cc.constexpr	2024-05-29 18:01:36.000000000 +0200
+++ chromium-126.0.6478.26/services/network/shared_dictionary/simple_url_pattern_matcher.cc	2024-06-02 23:51:25.543916702 +0200
@@ -28,17 +28,17 @@ namespace network {
 namespace {
 
 // https://urlpattern.spec.whatwg.org/#default-options
-constexpr liburlpattern::Options kDefaultOptions = {.delimiter_list = "",
+const liburlpattern::Options kDefaultOptions = {.delimiter_list = "",
                                                     .prefix_list = "",
                                                     .sensitive = true,
                                                     .strict = true};
 // https://urlpattern.spec.whatwg.org/#hostname-options
-constexpr liburlpattern::Options kHostnameOptions = {.delimiter_list = ".",
+const liburlpattern::Options kHostnameOptions = {.delimiter_list = ".",
                                                      .prefix_list = "",
                                                      .sensitive = true,
                                                      .strict = true};
 // https://urlpattern.spec.whatwg.org/#pathname-options
-constexpr liburlpattern::Options kPathnameOptions = {.delimiter_list = "/",
+const liburlpattern::Options kPathnameOptions = {.delimiter_list = "/",
                                                      .prefix_list = "/",
                                                      .sensitive = true,
                                                      .strict = true};
