diff -up chromium-126.0.6478.26/components/plus_addresses/plus_address_service.cc.el7-type-alias chromium-126.0.6478.26/components/plus_addresses/plus_address_service.cc
--- chromium-126.0.6478.26/components/plus_addresses/plus_address_service.cc.el7-type-alias	2024-05-29 18:01:08.000000000 +0200
+++ chromium-126.0.6478.26/components/plus_addresses/plus_address_service.cc	2024-06-02 17:32:29.917153207 +0200
@@ -196,7 +196,7 @@ std::vector<Suggestion> PlusAddressServi
     bool is_off_the_record,
     std::u16string_view focused_field_value,
     autofill::AutofillSuggestionTriggerSource trigger_source) {
-  using enum autofill::AutofillSuggestionTriggerSource;
+  using autofill::AutofillSuggestionTriggerSource;
   if (!SupportsPlusAddresses(last_committed_primary_main_frame_origin,
                              is_off_the_record)) {
     return {};
@@ -207,7 +207,7 @@ std::vector<Suggestion> PlusAddressServi
   std::optional<std::string> maybe_address =
       GetPlusAddress(OriginToFacet(last_committed_primary_main_frame_origin));
   if (maybe_address == std::nullopt) {
-    if (trigger_source != kManualFallbackPlusAddresses &&
+    if (trigger_source != AutofillSuggestionTriggerSource::kManualFallbackPlusAddresses &&
         !normalized_field_value.empty()) {
       return {};
     }
@@ -222,7 +222,7 @@ std::vector<Suggestion> PlusAddressServi
 
   // Only suggest filling a plus address whose prefix matches the field's value.
   std::u16string address = base::UTF8ToUTF16(*maybe_address);
-  if (trigger_source != kManualFallbackPlusAddresses &&
+  if (trigger_source != AutofillSuggestionTriggerSource::kManualFallbackPlusAddresses &&
       !address.starts_with(normalized_field_value)) {
     return {};
   }
