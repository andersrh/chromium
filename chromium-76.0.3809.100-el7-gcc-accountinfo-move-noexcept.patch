diff -up chromium-76.0.3809.100/google_apis/gaia/core_account_id.cc.gcc-accountinfo-move-noexcept-epel chromium-76.0.3809.100/google_apis/gaia/core_account_id.cc
--- chromium-76.0.3809.100/google_apis/gaia/core_account_id.cc.gcc-accountinfo-move-noexcept-epel	2019-08-23 07:35:16.544308344 +0200
+++ chromium-76.0.3809.100/google_apis/gaia/core_account_id.cc	2019-08-23 07:35:34.115441446 +0200
@@ -14,8 +14,6 @@ CoreAccountId::~CoreAccountId() = defaul
 
 CoreAccountId& CoreAccountId::operator=(const CoreAccountId&) = default;
 
-CoreAccountId& CoreAccountId::operator=(CoreAccountId&&) noexcept = default;
-
 CoreAccountId::CoreAccountId(const char* id) : id(id) {}
 
 CoreAccountId::CoreAccountId(std::string&& id) : id(std::move(id)) {}
diff -up chromium-76.0.3809.100/google_apis/gaia/core_account_id.h.gcc-accountinfo-move-noexcept-epel chromium-76.0.3809.100/google_apis/gaia/core_account_id.h
--- chromium-76.0.3809.100/google_apis/gaia/core_account_id.h.gcc-accountinfo-move-noexcept-epel	2019-08-23 07:36:05.994682935 +0200
+++ chromium-76.0.3809.100/google_apis/gaia/core_account_id.h	2019-08-23 07:36:13.039736302 +0200
@@ -19,7 +19,6 @@ struct CoreAccountId {
   ~CoreAccountId();
 
   CoreAccountId& operator=(const CoreAccountId&);
-  CoreAccountId& operator=(CoreAccountId&&) noexcept;
 
   // Those implicit constructor and conversion operator allow to
   // progressively migrate the code to use this struct. Removing
